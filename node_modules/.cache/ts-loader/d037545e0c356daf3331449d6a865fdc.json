{"remainingRequest":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/babel-loader/lib/index.js!/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/ts-loader/index.js??ref--13-2!/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/service/HttpClient.ts","dependencies":[{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/service/HttpClient.ts","mtime":1630492888945},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9haWx1L0RvY3VtZW50cy9wcm9ncmFtL251dHVpLWx1L251dHVpLWNhdC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL1VzZXJzL2FpbHUvRG9jdW1lbnRzL3Byb2dyYW0vbnV0dWktbHUvbnV0dWktY2F0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2FpbHUvRG9jdW1lbnRzL3Byb2dyYW0vbnV0dWktbHUvbnV0dWktY2F0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKCnZhciBxcyA9IHJlcXVpcmUoJ3FzJyk7CgppbXBvcnQgeyBUb2FzdCB9IGZyb20gJ0BudXR1aS9udXR1aSc7CnZhciBfdG9hc3QgPSBUb2FzdDsKdmFyIGxvYWRpbmcgPSAnJzsKdmFyIGNvbmZpZyA9IHsKICBhcHBpZDogJycsCiAgYmFzZVVybDogJycsCiAgYnVpbGRUaW1lOiBwcm9jZXNzLmVudi5idWlsZFRpbWUsCiAgaXNQcmQ6IHRydWUsCiAgYWN0aXZpdHlJZDogJzAxMDE1NzkyJywKICBhY3Rpdml0eUNvZGU6ICdUWERRdmdyRnN3NmZoWFBNeUdDZFBvRTNyRmgnLAogIHBhZ2VJZDogJzI4NTk0NzEnLAogIGFwcGx5S2V5OiAnYmlnX2JyYW5kJywKICAvLyBnZXRCYWJlbENoYW5uZWw6IGdldEJhYmVsQ2hhbm5lbCgpLAogIC8vIOWcsOeQhuS9jee9ruS/oeaBr+afpeivogogIGxic0FwcGlkOiAnZjlhOTUxYzAwZDAzZDk0OWNmYjQ4Mzg3M2E2OWZlODgnLAoKICAvKiog57uP57qs5bqmICovCiAgZ2VvOiB7CiAgICBsbmc6ICcnLAogICAgbGF0OiAnJwogIH0sCgogIC8qKiDlm5vnuqflnLDlnYAgKi8KICBhcmVhOiAnJywKICBzZXR0aW5nOiBmdW5jdGlvbiBzZXR0aW5nKF9jb25maWcpIHsKICAgIHRoaXMuYXJlYSA9IF9jb25maWcuYXJlYTsKICAgIHRoaXMuZ2VvLmxhdCA9IF9jb25maWcubGF0OwogICAgdGhpcy5nZW8ubG5nID0gX2NvbmZpZy5sbmc7CiAgfQp9Owp2YXIgYmFzZVVybCA9IGNvbmZpZy5iYXNlVXJsOwpleHBvcnQgdmFyIEh0dHBDbGllbnQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIEh0dHBDbGllbnQoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSHR0cENsaWVudCk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoSHR0cENsaWVudCwgW3sKICAgIGtleTogImNoZWNrU3RhdHVzIiwKICAgIHZhbHVlOgogICAgLyoqCiAgICAgKiDmo4Dmn6XnirbmgIEKICAgICAqIEBwYXJhbSB7UmVzcG9uc2VEYXRhfSByZXNwb25zZSDlk43lupTlgLwKICAgICAqLwogICAgZnVuY3Rpb24gY2hlY2tTdGF0dXMocmVzcG9uc2UpIHsKICAgICAgaWYgKGxvYWRpbmcgIT0gJycpIGxvYWRpbmcuaGlkZSgpOyAvLyDlpoLmnpxodHRw54q25oCB56CB5q2j5bi477yM5YiZ55u05o6l6L+U5Zue5pWw5o2uCgogICAgICBpZiAocmVzcG9uc2UgJiYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwIHx8IHJlc3BvbnNlLnN0YXR1cyA9PT0gMzA0IHx8IHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAwKSkgewogICAgICAgIC8vIOWmguaenOS4jemcgOimgemZpOS6hmRhdGHkuYvlpJbnmoTmlbDmja7vvIzlj6/ku6Xnm7TmjqUgcmV0dXJuIHJlc3BvbnNlLmRhdGEKICAgICAgICB2YXIgcmVzRGF0YSA9IHsKICAgICAgICAgIHN0YXRlOiAwLAogICAgICAgICAgdmFsdWU6IHJlc3BvbnNlLmRhdGEsCiAgICAgICAgICBtZXNzYWdlOiByZXNwb25zZS5kYXRhLm1zZwogICAgICAgIH07CgogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLmNvZGUgPT0gJzAnKSB7fSBlbHNlIHsKICAgICAgICAgIC8vIOiuv+mXrui+vuWIsOS4iumZkAogICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuY29kZSA9PSAnNjAxJykgewogICAgICAgICAgICByZXNEYXRhLnN0YXRlID0gMTsKICAgICAgICAgICAgcmVzRGF0YS52YWx1ZSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgIHJlc0RhdGEubWVzc2FnZSA9IHJlc3BvbnNlLmRhdGEudGlwczsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJlc0RhdGEuc3RhdGUgPSAxOwogICAgICAgICAgICByZXNEYXRhLnZhbHVlID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChyZXNEYXRhLnN0YXRlID09IDEpIHsKICAgICAgICAgIF90b2FzdC50ZXh0KHJlc0RhdGEsIHsKICAgICAgICAgICAgZHVyYXRpb246IDUwMAogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gcmVzRGF0YTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfdG9hc3QudGV4dCgn5pyN5Yqh5Zmo5Ye66ZSZ5LqG77yM6K+356iN5ZCO5YaN6K+V77yBJywgewogICAgICAgICAgZHVyYXRpb246IDUwMAogICAgICAgIH0pOwoKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogInBvc3QiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHBvc3QoKSB7CiAgICAgIHZhciBwYXJhbXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9OwogICAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KCdwb3N0JywgcGFyYW1zKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgdmFyIHBhcmFtcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307CiAgICAgIHJldHVybiB0aGlzLnJlcXVlc3QoJ2dldCcsIHBhcmFtcyk7CiAgICB9CiAgICAvKioKICAgICAqIHJlcXVlc3Tor7fmsYIKICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXRob2QgZ2V0IHwgcG9zdAogICAgICogQHBhcmFtIHsqfSBbcGFyYW1zXSDor7fmsYLlj4LmlbAKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJyZXF1ZXN0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVxdWVzdCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShtZXRob2QsIHBhcmFtcykgewogICAgICAgIHZhciBkZWZhdWx0SGVhZGVycywgaGVhZGVycywgb3B0aW9ucywgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRlZmF1bHRIZWFkZXJzID0gewogICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PVVURi04JwogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIGhlYWRlcnMgPSBPYmplY3QuYXNzaWduKGRlZmF1bHRIZWFkZXJzLCBwYXJhbXMuaGVhZGVyKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyOwogICAgICAgICAgICAgICAgb3B0aW9ucyA9IHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiBtZXRob2QsCiAgICAgICAgICAgICAgICAgIHVybDogYmFzZVVybCwKICAgICAgICAgICAgICAgICAgZGF0YTogcGFyYW1zLAogICAgICAgICAgICAgICAgICBwYXJhbXM6IHBhcmFtcywKICAgICAgICAgICAgICAgICAgdGltZW91dDogMTAwMCAqIDMwLAogICAgICAgICAgICAgICAgICB3aXRoQ3JlZGVudGlhbHM6IHRydWUsCiAgICAgICAgICAgICAgICAgIGNyb3NzRG9tYWluOiB0cnVlLAogICAgICAgICAgICAgICAgICBoZWFkZXJzOiBoZWFkZXJzCiAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgIGlmIChtZXRob2QgPT0gJ3Bvc3QnKSB7CiAgICAgICAgICAgICAgICAgIGRlbGV0ZSBvcHRpb25zLnBhcmFtczsKCiAgICAgICAgICAgICAgICAgIGlmIChoZWFkZXJzWydDb250ZW50LVR5cGUnXSA9PSAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9VVRGLTgnKSB7CiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5kYXRhID0gcXMuc3RyaW5naWZ5KG9wdGlvbnMuZGF0YSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gLy8gaWYgKG1ldGhvZCA9PSAncG9zdCcgJiYgdXJsLmluZGV4T2YoJ3VwZGF0ZUNhcnRTZWxlY3RlZFN0YXRlJykgPiAwKSB7CiAgICAgICAgICAgICAgICAvLyAgICAgZGVsZXRlIG9wdGlvbnMucGFyYW1zOwogICAgICAgICAgICAgICAgLy8gfQoKCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcyhvcHRpb25zKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHRoaXMuY2hlY2tTdGF0dXMocmVzKSk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDIpOwogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dC50MCk7CiAgICAgICAgICAgICAgICBpZiAobG9hZGluZyAhPSAnJykgbG9hZGluZy5oaWRlKCk7CgogICAgICAgICAgICAgICAgX3RvYXN0LnRleHQoJ+acjeWKoeWZqOWHuumUmeS6hu+8jOivt+eojeWQjuWGjeivle+8gScpOwoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIG51bGwpOwoKICAgICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcywgW1syLCAxMV1dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gcmVxdWVzdChfeCwgX3gyKSB7CiAgICAgICAgcmV0dXJuIF9yZXF1ZXN0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiByZXF1ZXN0OwogICAgfSgpCiAgfV0pOwoKICByZXR1cm4gSHR0cENsaWVudDsKfSgpOwovKioKICog5YaF6YOoIOWTjeW6lOWvueixoQogKiBAcGFyYW0ge251bWJlcn0gc3RhdGUgMCDmiJDlip8gMeWksei0pQogKiBAcGFyYW0ge2FueX0gdmFsdWUg5o6l5Y+j5ZON5bqU5pWw5o2uCiAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIOacjeWKoeWZqOWTjeW6lOS/oeaBr21zZwogKi8KCmV4cG9ydCB2YXIgUmVzcG9uc2VEYXRhID0gZnVuY3Rpb24gUmVzcG9uc2VEYXRhKCkgewogIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZXNwb25zZURhdGEpOwoKICB0aGlzLnN0YXRlID0gMDsKICB0aGlzLm1lc3NhZ2UgPSAnJzsKfTs="},{"version":3,"sources":["/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/service/HttpClient.ts"],"names":[],"mappings":"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","sourcesContent":["import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\nconst qs = require('qs');\nimport { Toast } from '@nutui/nutui';\nconst _toast: any = Toast;\nconst loading: any = '';\n\nconst config = {\n  appid: '',\n  baseUrl: '',\n  buildTime: process.env.buildTime,\n  isPrd: true, // 是否为线上\n  activityId: '01015792',\n  activityCode: 'TXDQvgrFsw6fhXPMyGCdPoE3rFh',\n  pageId: '2859471',\n  applyKey: 'big_brand',\n  // getBabelChannel: getBabelChannel(),\n  // 地理位置信息查询\n  lbsAppid: 'f9a951c00d03d949cfb483873a69fe88',\n  /** 经纬度 */\n  geo: {\n    lng: '',\n    lat: ''\n  },\n  /** 四级地址 */\n  area: '',\n  setting(_config: any) {\n    this.area = _config.area;\n    this.geo.lat = _config.lat;\n    this.geo.lng = _config.lng;\n  }\n};\nconst { baseUrl } = config;\n\nexport class HttpClient {\n  /**\n   * 检查状态\n   * @param {ResponseData} response 响应值\n   */\n  private checkStatus(response: AxiosResponse<any>): ResponseData | null {\n    if (loading != '') loading.hide();\n    // 如果http状态码正常，则直接返回数据\n    if (\n      response &&\n      (response.status === 200 ||\n        response.status === 304 ||\n        response.status === 400)\n    ) {\n      // 如果不需要除了data之外的数据，可以直接 return response.data\n      const resData: ResponseData = {\n        state: 0,\n        value: response.data,\n        message: response.data.msg\n      };\n      if (response.data.code == '0') {\n      } else {\n        // 访问达到上限\n        if (response.data.code == '601') {\n          resData.state = 1;\n          resData.value = response.data;\n          resData.message = response.data.tips;\n        } else {\n          resData.state = 1;\n          resData.value = response.data;\n        }\n      }\n      if (resData.state == 1) {\n        _toast.text(resData, { duration: 500 });\n      }\n      return resData;\n    } else {\n      _toast.text('服务器出错了，请稍后再试！', { duration: 500 });\n      return null;\n    }\n  }\n\n  public post(params: any = {}) {\n    return this.request('post', params);\n  }\n  public get(params: any = {}) {\n    return this.request('get', params);\n  }\n  /**\n   * request请求\n   * @param {string} method get | post\n   * @param {*} [params] 请求参数\n   */\n  private async request(\n    method: string,\n    params: any\n  ): Promise<ResponseData | null> {\n    const defaultHeaders = {\n      'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n    };\n    const headers = Object.assign(defaultHeaders, params.header);\n    try {\n      const options = {\n        method,\n        url: baseUrl,\n        data: params,\n        params: params,\n        timeout: 1000 * 30,\n        withCredentials: true,\n        crossDomain: true,\n        headers\n      };\n      if (method == 'post') {\n        delete options.params;\n        if (\n          headers['Content-Type'] ==\n          'application/x-www-form-urlencoded;charset=UTF-8'\n        ) {\n          options.data = qs.stringify(options.data);\n        }\n      }\n      // if (method == 'post' && url.indexOf('updateCartSelectedState') > 0) {\n      //     delete options.params;\n      // }\n\n      const res = await axios(options as AxiosRequestConfig);\n      return this.checkStatus(res);\n    } catch (error) {\n      console.error(error);\n      if (loading != '') loading.hide();\n      _toast.text('服务器出错了，请稍后再试！');\n      return null;\n    }\n  }\n}\n\n/**\n * 内部 响应对象\n * @param {number} state 0 成功 1失败\n * @param {any} value 接口响应数据\n * @param {string} message 服务器响应信息msg\n */\nexport class ResponseData {\n  state = 0;\n  value?: any;\n  message = '';\n}\n"],"sourceRoot":""}]}