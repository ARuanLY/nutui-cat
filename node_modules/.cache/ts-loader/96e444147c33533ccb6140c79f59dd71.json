{"remainingRequest":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/babel-loader/lib/index.js!/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/ts-loader/index.js??ref--13-2!/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/service/BaseApiService.ts","dependencies":[{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/service/BaseApiService.ts","mtime":1631158500154},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvYWlsdS9Eb2N1bWVudHMvcHJvZ3JhbS9udXR1aS1sdS9udXR1aS1jYXQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvYWlsdS9Eb2N1bWVudHMvcHJvZ3JhbS9udXR1aS1sdS9udXR1aS1jYXQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJy4vSHR0cENsaWVudCc7CmV4cG9ydCB2YXIgUXJ5UGFyYW0gPSBmdW5jdGlvbiBRcnlQYXJhbSgpIHsKICB2YXIgdHlwZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogJyc7CiAgdmFyIG1hcFRvID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAnJzsKCiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFFyeVBhcmFtKTsKCiAgLyoqIOihqOekuuS4muWKoeexu+Wei+aJgOWvueW6lOeahHR5cGXvvIzkvovlpoLvvJphZHZlcnRHcm91cOWvueW6lOeahOS4muWKoeexu+Wei+aYr+W5v+WRiue7hOS/oeaBryAqLwogIHRoaXMudHlwZSA9ICcnOwogIC8qKiDlvZPliY3kuJrliqHnsbvlnovmn6Xor6LnmoTmlbDmja7nu5PmnpzlnKjov5Tlm57mlbDmja5kYXRh5Lit55qE5a2X5q6177yI5Y+v5Lul6Ieq5a6a5LmJ77yM5ZCM5LiA5YiG5pSv5LiK5ZCM5LiA5bGC5p+l6K+i5Lit77yMbWFwVG/kuI3og73ph43lpI3vvIzlkKbliJnnu5PmnpzkvJrooqvopobnm5bvvInvvIjlj6rog73ljIXlkKvmlbDlrZfvvIzlrZfmr43lkozkuIvliJLnur/vvIkgKi8KCiAgdGhpcy5tYXBUbyA9ICcnOwogIHRoaXMubWFwVG8gPSBtYXBUbzsKICB0aGlzLnR5cGUgPSB0eXBlOwp9OwpleHBvcnQgdmFyIER5bmFtaWNQYXJhbSA9IGZ1bmN0aW9uIER5bmFtaWNQYXJhbSgpIHsKICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRHluYW1pY1BhcmFtKTsKfTsKZXhwb3J0IHZhciBCYXNlQXBpU2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gQmFzZUFwaVNlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQmFzZUFwaVNlcnZpY2UpOwoKICAgIHRoaXMuaHR0cENsaWVudCA9IG5ldyBIdHRwQ2xpZW50KCk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoQmFzZUFwaVNlcnZpY2UsIFt7CiAgICBrZXk6ICJnZXRDb29raWUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldENvb2tpZShrZXkpIHsKICAgICAgaWYgKGRvY3VtZW50LmNvb2tpZSkgewogICAgICAgIGtleSA9ICcoPzpefDsgKScgKyBrZXkgKyAnKD86PShbXjtdKj8pKT8oPzo7fCQpJzsKICAgICAgICB2YXIgcmVLZXkgPSBuZXcgUmVnRXhwKGtleSk7CiAgICAgICAgdmFyIHJlcyA9IHJlS2V5LmV4ZWMoZG9jdW1lbnQuY29va2llKTsKICAgICAgICByZXR1cm4gcmVzICE9PSBudWxsID8gZGVjb2RlVVJJQ29tcG9uZW50KHJlc1sxXSkgOiAnJzsKICAgICAgfQogICAgfQogIH1dKTsKCiAgcmV0dXJuIEJhc2VBcGlTZXJ2aWNlOwp9KCk7"},{"version":3,"sources":["/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/service/BaseApiService.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,UAAT,QAA2B,cAA3B;AAEA,WAAa,QAAb,GASE,oBAAiD;AAAA,MAArC,IAAqC,uEAAtB,EAAsB;AAAA,MAAlB,KAAkB,uEAAF,EAAE;;AAAA;;AAPjD;AACA,OAAA,IAAA,GAAe,EAAf;AACA;;AACA,OAAA,KAAA,GAAgB,EAAhB;AAKE,OAAK,KAAL,GAAa,KAAb;AACA,OAAK,IAAL,GAAY,IAAZ;AACD,CAZH;AAeA,WAAa,YAAb;AAAA;AAAA;AAIA,WAAa,cAAb;AAGE,4BAAA;AAAA;;AACE,SAAK,UAAL,GAAkB,IAAI,UAAJ,EAAlB;AACD;;AALH;AAAA;AAAA,WAOE,mBAAU,GAAV,EAAkB;AAChB,UAAI,QAAQ,CAAC,MAAb,EAAqB;AACnB,QAAA,GAAG,GAAG,aAAa,GAAb,GAAmB,uBAAzB;AACA,YAAM,KAAK,GAAG,IAAI,MAAJ,CAAW,GAAX,CAAd;AACA,YAAM,GAAG,GAAG,KAAK,CAAC,IAAN,CAAW,QAAQ,CAAC,MAApB,CAAZ;AACA,eAAO,GAAG,KAAK,IAAR,GAAe,kBAAkB,CAAC,GAAG,CAAC,CAAD,CAAJ,CAAjC,GAA4C,EAAnD;AACD;AACF;AAdH;;AAAA;AAAA","sourcesContent":["import { HttpClient } from './HttpClient';\n\nexport class QryParam {\n  [x: string]: any;\n  /** 表示业务类型所对应的type，例如：advertGroup对应的业务类型是广告组信息 */\n  type: string = '';\n  /** 当前业务类型查询的数据结果在返回数据data中的字段（可以自定义，同一分支上同一层查询中，mapTo不能重复，否则结果会被覆盖）（只能包含数字，字母和下划线） */\n  mapTo: string = '';\n  /** 下一层查询的入参，也是一个对象数组JSON字符串，结构和qryParam是一样的，只不过有些业务类型的其它关键参数依赖上一层查询（当前支持3层查询，如果不需要下一层查询此字段可不传，数据量很大的情况下，不建议嵌套太多层查询） */\n  next?: any[];\n\n  constructor(type: string = '', mapTo: string = '') {\n    this.mapTo = mapTo;\n    this.type = type;\n  }\n}\n\nexport class DynamicParam {\n  [x: string]: any;\n}\n\nexport class BaseApiService {\n  private httpClient: HttpClient;\n\n  constructor() {\n    this.httpClient = new HttpClient();\n  }\n\n  getCookie(key: any) {\n    if (document.cookie) {\n      key = '(?:^|; )' + key + '(?:=([^;]*?))?(?:;|$)'\n      const reKey = new RegExp(key)\n      const res = reKey.exec(document.cookie)\n      return res !== null ? decodeURIComponent(res[1]) : ''\n    }\n  }\n}\n"],"sourceRoot":""}]}