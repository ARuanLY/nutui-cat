{"remainingRequest":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/packages/tasklist/index.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/packages/tasklist/index.vue","mtime":1630492888935},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnaW5kZXguc2Nzcyc7Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA","file":"index.vue","sourceRoot":"src/packages/tasklist","sourcesContent":["<template>\n  <div :class=\"classes\" >\n    <div v-for=\"(item, index) of list\" :key=\"index\" :class=\"['nutcat-task-list',customClass]\" @click=\"handleClick(item)\">\n      <div class='nutcat-task-icon'>\n        <IconRender :node='item'></IconRender>\n      </div>\n      <div class=\"nutcat-task-desc\">\n        <div>{{ item.name }} <span v-if=\"item.times != null && item.times != undefined && item.maxTimes\">（{{ item.times }}/{{ item.maxTimes }}）</span></div>\n        <div v-if=\"item.desc\">{{ item.desc }}</div>\n      </div>\n\n      <div v-if=\"!renderOpetation\" :class=\"['nutcat-operate-btn', `${item.operationStatus?item.operationStatus:''}`]\" @click=\"handleBtn(item)\">{{ item.operationMsg }}</div>\n      <OperationRender :node='item' v-else></OperationRender>\n    </div>\n  </div>\n</template>\n  <script>\nimport { createComponent } from '@/utils/create';\nconst { componentName, create } = createComponent('tasklist');\n\nexport default create({\n  props: {\n    list: {\n      type: Array,\n      default: () => []\n    },\n    customClass:{\n      type: String,\n      default: ''\n    },\n    renderOpetation:Function,\n    renderIcon:Function\n  },\n  data() {\n    return {};\n  },\n  components: {\n    IconRender:{\n      props: {\n        node: {\n          required: true\n        }\n      },\n      render(h) {\n        let parent = this.$parent\n        const node = this.node\n        const { data, store } = node;\n        if(parent.renderIcon){\n          return parent.renderIcon(h,{node,data, store})\n        } else {\n          return h('img',{\n            attrs: {\n              src: node.icon\n            },\n          })\n        }\n      //  return (parent.renderIcon?parent.renderIcon(h,{node,data, store}):<img src={node.icon} alt=\"\" />);\n      }\n    },\n    OperationRender:{\n      props: {\n        node: {\n          required: true\n        }\n      },\n      render(h) {\n        let parent = this.$parent\n        const node = this.node\n        const { data, store } = node;\n        return (parent.renderOpetation(h,{node,parent,data, store}));\n      }\n    }\n  },\n  computed: {\n    classes() {\n      return {\n        [componentName + '-page']: true\n      };\n    }\n  },\n  mounted() {\n  },\n  methods: {\n    handleClick(data) {\n      if(data) this.$emit('click',data)\n      \n    },\n    handleBtn(data){\n      this.$emit('clickOperate',data)\n      window.event.stopPropagation()\n    }\n  }\n});\n</script>\n  \n<style lang=\"scss\">\n@import 'index.scss';\n</style>\n  "]}]}