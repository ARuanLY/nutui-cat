{"remainingRequest":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/index.js!/Users/ailu/Documents/program/nutui-lu/nutui-cat/loader/md-vue/index.js!/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/packages/navleft/doc.md?vue&type=template&id=ecaeb6da&","dependencies":[{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/packages/navleft/doc.md","mtime":1626782910785},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/loader/md-vue/index.js","mtime":1622707954407}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}