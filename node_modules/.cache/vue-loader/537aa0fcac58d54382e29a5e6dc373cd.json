{"remainingRequest":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/packages/backtop/index.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/packages/backtop/index.vue","mtime":1626664435490},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJ2luZGV4LnNjc3MnOwo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA","file":"index.vue","sourceRoot":"src/packages/backtop","sourcesContent":["<template>\n  <nut-backtop :class=\"classes\" @click=\"handleClick\" :el-id=\"elId\" v-show=\"showBackTop\">\n    <slot></slot>\n  </nut-backtop>\n</template>\n<script>\n\nimport { createComponent } from '@/utils/create';\nconst { componentName, create } = createComponent('backtop');\nimport throttle from 'lodash/throttle';\n\nexport default create({\n  props: {\n    elId: {\n      type: String,\n      default: ''\n    }, \n    distance: {\n      type: Number,\n      default: 200\n    }, \n  },\n  data() {\n    return { \n      showBackTop: false,\n      _prevTop: 0\n    };\n  },\n  components: {},\n  computed:{\n    classes() {\n      return {\n        [componentName]: true,\n      };\n    },\n  },\n  mounted() {\n    if (this.elId && document.getElementById(this.elId)) {\n      this.scrollEl = document.getElementById(this.elId);\n    }\n    console.log('this.scrollEl', this.scrollEl);\n    console.log('window', window);\n\n    // 滚动监听\n    this.scrollEl.addEventListener('scroll', throttle(this._handleInteraction, 300), true)\n    this._listenScroll()\n  },\n  methods: {\n    handleClick(){\n      this.$emit('click')\n    },\n    // 上滑\n    _scrollUp() {\n      // console.log('上滑')\n      this.showBackTop = true;\n      this.scrollUp && this.scrollUp()\n    },\n    // 下滑\n    _scrollDown() {\n      // console.log('下滑')\n      this.showBackTop = false;\n      this.scrollDown && this.scrollDown()\n    },\n    // 滑动停止\n    _scrollStop() {\n      // console.log('滑动停止')\n      this.showBackTop = true;\n      this.scrollStop && this.scrollStop()\n    },\n    _handleInteraction() {\n      let top = this.scrollEl.pageYOffset || this.scrollEl.scrollTop\n      // console.log('distance', this.distance)\n      // console.log('top', top)\n      if (top >= this.distance) {\n        this.showFloat = true;\n        if (this._prevTop - top < 0/* && this.slideMenu*/) {\n          // 下滚动\n          this._scrollDown()\n        } else if (this._prevTop - top > 0) {\n          // 上滚动\n          this._scrollUp()\n        }\n      }\n      this._prevTop = top\n    },\n    // 监听 手指离开屏幕 和 惯性停止，两者同时满足才说明用户停止滑动，按住也算滑\n    _listenScroll() {\n      this.scrollEl.addEventListener('touchstart', () => {\n        this._scrollTouch = true\n      })\n      this.scrollEl.addEventListener('touchend', () => {\n        this._scrollTouch = false\n        this._scrollStop()\n      })\n      this.scrollEl.addEventListener('scroll', () => {\n        this._scrolling = true\n        clearTimeout(this._stimer)\n        this._stimer = null\n        this._stimer = setTimeout(() => {\n          this._scrolling = false\n          this._scrollStop()\n        }, 800)\n      })\n    }\n  }\n});\n</script>\n\n<style lang=\"scss\">\n@import 'index.scss';\n</style>\n  "]}]}