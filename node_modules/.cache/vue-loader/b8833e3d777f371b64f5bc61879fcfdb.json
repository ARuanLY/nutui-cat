{"remainingRequest":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/packages/tab/index.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/packages/tab/index.vue","mtime":1630492888918},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJ2luZGV4LnNjc3MnOwo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoJA","file":"index.vue","sourceRoot":"src/packages/tab","sourcesContent":["<template>\n  <div :class=\"classes\">\n    <div :class=\"[{ scroll: scrollC }, 'nutcat-nav-box', `nutcat-${type}-nav`,customClass]\">\n      \n        <!-- 右侧带有图片 -->\n        <template v-if=\"type == 'image'\">\n\n          <div \n            v-for=\"(item, index) in dealData(normData)\"\n            :key=\"index\"\n            @click=\"handleClick(item,index)\"\n            :class=\"[(activeIndex == index)?(activeClass?activeClass:'active'):'','']\"\n          >\n            <template>\n              <img :src=\"item.cImage\" class=\"nutcat-item-image\"/>\n            </template>\n            <span class=\"nutcat-image-tab-text\">{{ item.cName }}</span>\n          </div>\n        </template>\n\n        <template v-else>\n          <div\n            v-for=\"(item, index) in dealData(normData)\"\n            :key=\"index\"\n            @click=\"handleClick(item,index)\"\n            :class=\"[{\n              'active-underline': (activeIndex == index) && type == 'base',\n              splitline: (type == 'simple' || showLine) && type != 'complex'\n            },(activeIndex == index)?(activeClass?activeClass:'active'):'']\"\n            >\n            <template v-if=\"type == 'complex'\">\n              <div class=\"complex-name\"> {{ item.cName }}</div>\n              <div class=\"complex-subtitle\" v-if=\"item.cDesc && showDesc\"> {{ item.cDesc }}</div>\n            </template>\n            <template v-else> {{ item.cName }}</template>\n          </div>\n        </template>\n       \n    </div>\n  </div>\n</template>\n  <script>\nimport { createComponent } from '@/utils/create';\nconst { componentName, create } = createComponent('tab');\nimport connectData  from '@/utils/connect';\nexport default create({\n  props: {\n    type: {\n      type: String,\n      default: 'base'\n    },\n    data: {\n      type: [Array,Object],\n      default: () => {\n        return [];\n      }\n    },\n    scroll: {\n      type: Boolean,\n      default: false\n    },\n    showLine: {\n      type: Boolean,\n      default: true\n    },\n    showDesc:{\n      type:Boolean,\n      default:true\n    },\n    customClass:{\n      type:String,\n      default:''\n    },\n    activeClass:String,\n    activeIndex: {\n      type: [String,Number],\n      default: 0\n    },\n\n  },\n  data() {\n    return {\n      scrollC: false,\n      normData:[]\n    };\n  },\n  components: {},\n  computed: {\n    classes() {\n      return {\n        [componentName + '-page']: true\n      };\n    }\n  },\n  watch: {\n    data:{ //深度监听，可监听到对象、数组的变化\n        handler (newV, oldV) {\n          // console.log('更新',newV)\n          this.normData = this.deepClone(this.data[0])\n        },\n        deep:true\n      }\n  },\n  mounted() {\n    this.scrollC = this.scroll || this.data[0].length > 5;\n\n    this.normData = this.deepClone(this.data[0])\n\n  },\n  methods: {\n    handleClick(item,index) {\n      this.$emit('click', this.data[0][index],index);\n    },\n\n    dealData(obj) {\n      if(obj.length>0){\n        obj.forEach(item=>{\n          \n          connectData(item, this.data[1])\n        })\n      }\n      return obj\n    },\n\n    //深度克隆\n    deepClone(obj) {\n        const objClone = Array.isArray(obj) ? [] : {}\n        if (obj && typeof obj === 'object') {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    // 用for...in循环会获取到原型链上的可枚举属性，不过可以使用hasOwnProperty()方法过滤掉。\n                    if (obj[key] && typeof obj[key] === 'object') {\n                        // 判断ojb子元素是否存在并且是否为为对象，如果是，递归复制\n                        objClone[key] = this.deepClone(obj[key])\n                    } else {\n                        // 如果不是，简单复制\n                        objClone[key] = obj[key]\n                    }\n                }\n            }\n        }\n        return objClone\n    }\n  }\n});\n</script>\n  \n<style lang=\"scss\">\n@import 'index.scss';\n</style>\n  "]}]}