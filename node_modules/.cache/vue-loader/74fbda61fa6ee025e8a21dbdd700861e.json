{"remainingRequest":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/packages/button/index.vue?vue&type=style&index=0&id=68cf680e&lang=scss&scoped=true&","dependencies":[{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/packages/button/index.vue","mtime":1630492888672},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJ2luZGV4LnNjc3MnOwo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA","file":"index.vue","sourceRoot":"src/packages/button","sourcesContent":["\n<template>\n  <nut-button \n    :class=\"[\n      'nutcat-button',\n      type ? 'nutcat-button-' + type : '',\n      radius ? 'nutcat-button-' + radius : '',\n    ]\"\n    :style=\"styles\" \n  >\n    <template v-if=\"beforeIcon\">\n      <nutcat-icon :type=\"beforeIcon\" class=\"before-icon\"></nutcat-icon>\n    </template>\n    <span :class=\"classesButton\">\n      <slot></slot>\n    </span>\n    <template v-if=\"afterIcon\">\n      <nutcat-icon :type=\"afterIcon\" class=\"after-icon\"></nutcat-icon>\n    </template>\n  </nut-button>\n</template>\n\n<script lang=\"ts\">\nimport { createComponent } from '@/utils/create';\nconst { componentName, create } = createComponent('button');\n\nexport default create({\n  props: {\n    type: {\n      type: String,\n      default: ''\n    },\n    radius: {\n      type: [Boolean, String, Number],\n      default: false\n    },\n    color: {\n      type: String,\n      default: ''\n    },\n    borderColor: {\n      type: String,\n      default: ''\n    },\n    bgColor: {\n      type: String,\n      default: ''\n    },\n    beforeIcon: {\n      type: String,\n      default: ''\n    },\n    afterIcon: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n\t\treturn {\n    };\n\t},\n  components: {},\n  mounted() {\n    \n  },\n  computed: {\n    classesButton() {\n      return {\n        [componentName+'-content']: true,\n      };\n    },\n    styles() {\n      return {\n        'background-color': (this as any).bgColor,\n        'color': (this as any).color,\n        'border-color': (this as any).borderColor,\n        'border-width': (this as any).borderColor ? '1px' : '',\n        'border-style': (this as any).borderColor ? 'solid' : '',\n        'border-radius': typeof (this as any).radius == 'string' ? (this as any).radius : '50px',\n      }\n    }\n  },\n  methods: {\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'index.scss';\n</style>\n"]}]}