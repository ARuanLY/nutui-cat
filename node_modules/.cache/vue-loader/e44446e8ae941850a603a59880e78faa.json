{"remainingRequest":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/packages/noticebar/index.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/src/packages/noticebar/index.vue","mtime":1630929352001},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ailu/Documents/program/nutui-lu/nutui-cat/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICdpbmRleC5zY3NzJzsK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiNA","file":"index.vue","sourceRoot":"src/packages/noticebar","sourcesContent":["<template>\n  <nut-noticebar\n    :direction=\"direction\"\n    :list=\"list\"\n    :speed=\"speed\"\n    :standTime=\"standTime\"\n    :complexAm=\"complexAm\"\n    :height=\"height\"\n    :text=\"text\"\n    :closeMode=\"closeMode\"\n    :wrapable=\"wrapable\"\n    :leftIcon=\"leftIcon\"\n    :color=\"color\"\n    :background=\"background\"\n    :delay=\"delay\"\n    :scrollable=\"scrollable\"\n    v-on=\"$listeners\"\n  >\n    <slot></slot>\n  </nut-noticebar>\n</template>\n  <script>\nimport { createComponent } from '@/utils/create';\n// import ScrollItem from './item'\nconst { componentName, create } = createComponent('noticebar');\n\nexport default create({\n  props: {\n    // 滚动方向  across 横向 vertical 纵向\n    direction: {\n      type: String,\n      default: 'across'\n    },\n    list: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    standTime: {\n      type: Number,\n      default: 1000\n    },\n    complexAm: {\n      type: Boolean,\n      default: false\n    },\n    height: {\n      type: Number,\n      default: 40\n    },\n    text: {\n      type: String,\n      default: ''\n    },\n    closeMode: {\n      type: Boolean,\n      default: false\n    },\n    wrapable: {\n      type: Boolean,\n      default: false\n    },\n    leftIcon: { \n      type: String, \n      default: '' \n    },\n    color: {\n      type: String,\n      default: '#F9911B'\n    },\n    background: {\n      type: String,\n      default: 'rgba(254,250,216,1)'\n    },\n    delay: {\n      type: [String, Number],\n      default: 1\n    },\n    scrollable: {\n      type: Boolean,\n      default: true\n    },\n    speed: {\n      type: Number,\n      default: 50\n    }\n  },\n  data() {\n    return {\n    };\n  },\n  components: {\n    // ScrollItem:ScrollItem\n  },\n  computed: {\n    classes() {\n      return {\n        [componentName + '-page']: true\n      };\n    },\n\n    horseLampStyle(){\n      \n      let styles = {}\n      if(this.complexAm){\n        styles = {\n          'transform':`translateY(${this.distance}px)`\n        }\n      } else {\n        if(this.animate){\n          styles = {\n            'transition': `all ${~~(this.height/this.speed/4)}s`,\n            'margin-top': `-${this.height}px`\n          }\n        } \n      }\n      return styles\n    }\n  },\n  watch: {\n    list(newValue, oldValue) {\n      this.scrollList = [].concat(newValue) \n    }\n  },\n  mounted() {\n    console.log(this.$slots)\n    if(this.$slots.default){\n      this.scrollList = [].concat(this.$slots.default)\n    } else {\n        this.scrollList = [].concat(this.list) \n    } \n    \n    setTimeout(()=>{\n      this.complexAm?this.startRoll():this.startRollEasy();\n    },this.standTime)\n\n  },\n  methods: {\n    /**\n     * 利益点滚动方式一\n     */\n    startRollEasy(){\n      this.showhorseLamp()\n      this.timer = setInterval(this.showhorseLamp,~~(this.height/this.speed/4)*1000+this.standTime)\n    },\n    showhorseLamp () {\n      this.animate = true;\n      setTimeout(() => {\n        this.scrollList.push(this.scrollList[0]);\n        this.scrollList.shift();\n        this.animate = false;\n      }, ~~(this.height/this.speed/4)*1000);\n    },\n    /**\n     * 利益点滚动方式一\n     */\n    startRoll(){\n      \n      this.timer = setInterval(()=>{\n        let chunk = 100\n        for(let i=0;i<chunk;i++){\n          this.scroll(i,i<(chunk-1)?false:true)\n        }\n      },this.standTime+100*this.speed)\n    },\n    scroll(n,last){\n      setTimeout(()=>{\n        this.distance -= this.height/100\n        if(last){\n          this.scrollList.push(this.scrollList[0]);\n          this.scrollList.shift();\n          this.distance = 0\n        }\n      },n*this.speed)\n    },\n\n\n    /**\n     * 点击滚动单元\n     */\n    go(item){\n      this.$emit('go',item)\n    },\n\n    handleClickIcon(){\n      console.log('go')\n      this.$emit('goIcon',this.scrollList[0])\n    },\n\n    activated() {\n      if (this.keepAlive) {\n        this.keepAlive = false;\n      }\n    },\n\n    deactivated() {\n      this.keepAlive = true;\n      clearInterval(this.timer)\n    },\n\n    destroyed() {\n      clearInterval(this.timer)\n    }\n  }\n});\n</script>\n  \n  <style lang=\"scss\">\n@import 'index.scss';\n</style>\n  "]}]}