"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * @Author: zhuzhida
 * @Date: 2020-07-20 20:19:51
 * @Last Modified by: zhuzhida
 * @Last Modified time: 2021-08-20 16:42:06
 */
var uploadTarget_1 = require("../model/uploadTarget");
var ossKey_1 = require("../model/ossKey");
var oss_1 = __importDefault(require("../oss/oss"));
var logger_1 = __importDefault(require("../util/logger"));
var dic_1 = require("./../util/dic");
var package_config = require(dic_1.ROOT_PACKAGE_PATH('package.json'));
/**
 *
 *  WebPack 上传插件钩子挂载
 * @class WebPackUploadOssPlugin
 */
var WebPackUploadOssPlugin = /** @class */ (function () {
    function WebPackUploadOssPlugin(options) {
        this._uploadTarget = new uploadTarget_1.uploadTarget();
        this._downloadTargets = [];
        this._ossKey = new ossKey_1.ossKey();
        logger_1.default.info(package_config.name + " v" + package_config.version);
        this._uploadTarget.bucket = options.bucket;
        this._uploadTarget.folder = options.folder;
        this._uploadTarget.localFullPath = options.localFullPath;
        if (options.ignoreRegexp)
            this._uploadTarget.ignoreRegexp = options.ignoreRegexp;
        this._ossKey.access = options.access;
        this._ossKey.secret = options.secret;
        if (options.site) {
            this._ossKey.site = options.site;
        }
        // if (options.useHttps !== undefined) {
        //     this._ossKey.useHttps = options.useHttps;
        // }
        if (options.cover !== undefined) {
            this._uploadTarget.cover = options.cover;
        }
        if (options.printCdnFile !== undefined) {
            this._uploadTarget.printCdnFile = options.printCdnFile;
        }
        if (options.uploadStart !== undefined) {
            this._uploadTarget.uploadStart = options.uploadStart;
        }
        if (options.uploadProgress !== undefined) {
            this._uploadTarget.uploadProgress = options.uploadProgress;
        }
        if (options.uploadEnd !== undefined) {
            this._uploadTarget.uploadEnd = options.uploadEnd;
        }
        if (options.downloadOptions && Array.isArray(options.downloadOptions)) {
            this._downloadTargets = options.downloadOptions;
        }
    }
    WebPackUploadOssPlugin.prototype.apply = function (compiler) {
        var _this = this;
        compiler.plugin("done", function (stats) {
            new oss_1.default(_this._ossKey).upload(_this._uploadTarget);
        });
    };
    /**
     * 上传
     */
    WebPackUploadOssPlugin.prototype.upload = function (uploadOptions) {
        var _this = this;
        if (uploadOptions === void 0) { uploadOptions = [this._uploadTarget]; }
        if (!Array.isArray(uploadOptions)) {
            uploadOptions = [uploadOptions];
        }
        uploadOptions.forEach(function (option) {
            if (Object.keys(option).length) {
                new oss_1.default(_this._ossKey).upload(option);
            }
            else {
                logger_1.default.error("请设置上传 option 参数，详见文档 http://npm.m.jd.com/package/@jd/upload-oss-tools ");
            }
        });
    };
    /**
     * 下载
     */
    WebPackUploadOssPlugin.prototype.download = function (downloadOptions) {
        var _this = this;
        if (downloadOptions === void 0) { downloadOptions = this._downloadTargets; }
        if (!Array.isArray(downloadOptions)) {
            downloadOptions = [downloadOptions];
        }
        downloadOptions.forEach(function (option) {
            if (Object.keys(option).length) {
                new oss_1.default(_this._ossKey).dowload(option);
            }
            else {
                logger_1.default.error("请设置下载 option 参数，详见文档 http://npm.m.jd.com/package/@jd/upload-oss-tools ");
            }
        });
    };
    return WebPackUploadOssPlugin;
}());
module.exports = WebPackUploadOssPlugin;
