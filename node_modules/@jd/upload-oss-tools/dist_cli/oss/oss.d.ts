import { uploadTarget } from "../model/uploadTarget";
import { ossKey } from "../model/ossKey";
import { downloadTarget } from "../model/downloadTarget";
/**
 * 删除字符串首尾指定字符
 * @param str 要处理的字符串
 * @param char 去除的指定字符
 * @param type 类型，右边或左边，为空是替换首尾
 * @returns {*}
 */
export declare function trimChar(str: string, char: string, type?: string): string;
declare class oss {
    private jss;
    private ossInfo;
    private cdnFile;
    private _uploadTarget;
    private _downloadTarget;
    constructor(_ossKey: ossKey);
    checkSite(): boolean;
    /**
     * 执行上传
     * @param {uploadTarget} _uploadTarget
     * @memberof oss
     */
    upload(_uploadTarget: uploadTarget): false | undefined;
    /**
     * 执行下载
     * @param {downloadTarget} _downloadTarget
     * @memberof oss
     */
    dowload(_downloadTarget: downloadTarget): void;
    /**
     * 获取空间列表
     * @returns {Promise<BucketListRes>}
     * @memberof oss
     */
    getBucketList(): Promise<BucketListRes>;
    /**
     * 检查空间，是否存在，不存在则创建
     * @returns {Promise<boolean>}
     * @memberof oss
     */
    private checkObjectList;
    /**
     *
     * 匹配本地文件
     * @param {string} dir
     * @param {string} ignoreRegexp
     * @memberof oss
     */
    private makeAssetsMap;
    /**
     * 上传文件
     *
     * @param {UploadOssTarget[]} filelist 待上传文件数组
     * @returns
     * @memberof oss
     */
    private uploadFile;
    /**
     * 删除远程空间内容
     * @param {*} bucket
     * @returns {Promise<boolean>}
     * @memberof oss
     */
    private deleteOriginBucket;
    /**
     * 下载远程空间文件
     * @param {*} bucket
     * @returns {Promise<boolean>}
     * @memberof oss
     */
    private downLoadOriginBucket;
    /**
     * 下载cdn文件
     * @param {*} bucket
     * @returns {Promise<boolean>}
     * @memberof oss
     */
    private printCdnFile;
}
declare class BucketListRes {
    state: boolean;
    bucketList: any[];
}
export default oss;
